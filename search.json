[{"title":"美化你的Stellar主题博客","path":"/2025/06/21/美化你的Stellar主题博客/","content":"在上一篇教程中，我们已经成功将博客部署到了 GitHub Pages。但此时的博客还处于初始状态，缺乏个性化和功能定制。本篇教程将带你一步步配置 Stellar 主题，让你的博客焕然一新。 主题配置基础配置文件优先级Stellar 主题支持多级配置。为了便于维护和升级，强烈建议在博客根目录下创建独立的主题配置文件：_config.stellar.yml。此文件的优先级高于主题自带的配置文件。 官方配置文档：Stellar 主题设置指南 博客基本信息打开博客根目录下的 _config.yml 文件，修改以下站点信息： # Sitetitle: HuanYueSpace # 博客标题avatar: /assets/avatar.jpg # 头像路径 (存放在 /source/assets/)subtitle: 精诚所至，金石为开 # 副标题description: 立志越高，所需要的能力越强，相应的，逼迫自己所学的，也就越多。 # 站点描述keywords: Python,Cpp,算法,编程技术 # 关键词author: Jianjun Huang # 作者名language: - zh-CN - entimezone: # 时区 为了让头像在导航栏正确显示，需在 _config.stellar.yml 中添加： logo: avatar: [config.avatar](/about/) # 点击头像跳转至「关于」页面 title: [config.title](/) # 点击标题返回首页 导航菜单配置效果预览： 在 _config.stellar.yml 中添加 menubar 配置项： menubar: columns: 4 # 每行显示菜单项数量 items: # 菜单项列表 - id: post # 菜单唯一标识 (用于高亮) theme: #1BCDFC # 高亮颜色 (仅对 fill=currentColor 的 SVG 生效) icon: solar:documents-bold-duotone # 图标 (支持内置图标或图片 URL) title: 博客 # 菜单名称 url: / # 跳转链接 - id: wiki theme: #3DC550 icon: solar:notebook-bookmark-bold-duotone title: 文档 url: /wiki/ # 可继续添加其他菜单项... 文章相关配置文章类型Stellar 提供两种文章布局风格： tech：默认技术类文章 (紧凑布局) story：图文类文章 (宽松段落间距) article: type: tech # 全局默认类型 (可在每篇文章的 Front Matter 中覆盖) 文章封面自动生成封面 (按标签匹配)article: auto_cover: true # 根据文章标签自动搜索匹配的封面图 手动指定封面在文章的 Front Matter 中添加 cover 属性： ---cover: /assets/covers/2024-hexo-guide.jpg # 本地图片路径# 或使用在线图片# cover: https://example.com/cover.jpg# 全图封面卡片配置 (可选)poster: topic: 技术教程 # 封面小标题 headline: Hexo 终极配置指南 # 主标题 caption: 一步步打造个性化博客 # 副标题 color: blue # 标题颜色 (white, red, blue...)--- 内容摘要摘要用于在文章列表中显示预览。在正文中使用 !-- more -- 分隔摘要和完整内容： ---title: 我的第一篇博客---这里是摘要部分，会显示在首页的文章卡片中。!-- more --这里是正文部分，仅在文章详情页显示。 注意：分隔符前后需保留空行。 文章模板定制新建文章时的默认 Front Matter。编辑 /scaffolds/post.md： ---title: title date: date tags: []categories: []description: # 文章摘要# 封面设置cover: poster: topic: headline: caption: color: # 功能开关sticky: # 置顶优先级 (值越大越靠前)comments: true # 是否开启评论indexing: true # 是否允许搜索引擎索引# 高级选项mermaid: false # 启用 Mermaid 图表katex: false # 启用 KaTeX 数学公式mathjax: false # 启用 MathJax 数学公式--- 内容组织与推荐1. 分类与标签 分类 (Categories)：支持层级结构，在列表中仅显示一级分类 categories: [技术文档, Hexo教程] 标签 (Tags)：用于关联文章和关键词检索 tags: [Hexo, Stellar, 博客搭建] 2. 相关文章推荐 安装依赖插件： npm install hexo-related-popular-posts --save 在主题配置中启用： article: related_posts: enable: true title: 您可能感兴趣的文章 # 推荐模块标题 高级美化技巧1. 长代码块滚动条解决代码块过长导致的页面布局问题： 创建自定义 JS 文件 /themes/stellar/source/js/custom.js： // 为超长代码块添加滚动限制document.addEventListener(DOMContentLoaded, function() const codeBlocks = document.querySelectorAll(.highlight); codeBlocks.forEach(block = if (block.scrollHeight 800) block.style.maxHeight = 300px; block.style.overflowY = auto; block.style.borderRadius = 8px; // 添加圆角美化 );); 在 _config.yml 中注入脚本： inject: script: - script src=/js/custom.js?1/script 注意：此功能对 Tabs 容器内的代码块无效。 2. 页脚访问统计添加「不蒜子」访问统计和运行时间： # 在 _config.stellar.yml 的 footer.content 配置content: | center span © 2024 a target=_blank href=https://github.com/FelicxFosterFelicx/a | 基于 a target=_blank href=https://github.com/FelicxFoster/hexo-theme-stellarStellar/a 构建 /span br !-- 不蒜子统计 -- script async src=//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js/script span 总访问量 span id=busuanzi_value_site_pv style=font-weight:bold0/span 次 | 本文阅读量 span id=busuanzi_value_page_pv style=font-weight:bold0/span 次 /span br !-- 运行时间 -- span id=runtime_span🦉博客已运行 0 天🦉/span script function updateRuntime() const start = new Date(2018, 8, 12); // 月份从0开始 (8=9月) const now = new Date(); const diff = now - start; const years = Math.floor(diff / (365 * 24 * 60 * 60 * 1000)); const days = Math.floor(diff / (24 * 60 * 60 * 1000)) % 365; const hours = Math.floor((diff % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000)); const minutes = Math.floor((diff % (60 * 60 * 1000)) / (60 * 1000)); const seconds = Math.floor((diff % (60 * 1000)) / 1000); document.getElementById(runtime_span).innerHTML = `🦉持续营业：$years年$days天$hours时$minutes分$seconds秒🦉`; setInterval(updateRuntime, 1000); updateRuntime(); /script /center 3. 页脚字数统计 安装统计插件： npm install hexo-wordcount --save 修改主题模板文件 (/themes/stellar/layout/_partial/main/footer.ejs)： // 在 footer 内容输出前添加el += span class=totalcount共发表 + site.posts.length + 篇博文 · /span;el += span class=post-count总计 + totalcount(site) + 字/span; 添加自定义样式 (/themes/stellar/source/css_custom.styl)： /* 页脚统计样式 */.page-footer text-align: center; margin: 0 auto; width: 100%; .text .totalcount, .post-count color: var(--text-p2); font-size: 0.9rem; 效果展示： 至此，你的 Stellar 主题博客已初具规模！下一期我们将深入探讨 Stellar 主题的更多高级组件和自定义功能。","tags":["Hexo","Stellar","博客搭建"],"categories":["技术文档","Hexo教程"]},{"title":"使用 GitHub Pages + Hexo 搭建个人博客教程","path":"/2025/06/20/使用 GitHub Pages + Hexo 搭建个人博客教程/","content":"本教程详细记录了使用 GitHub Pages 服务结合 Hexo 静态博客框架部署个人博客的完整流程。 环境准备 安装 Git Windows 11 系统安装： winget install --id Git.Git -e --source winget 验证安装： git --version# 输出示例：# git version 2.50.0.windows.1 安装 Node.js 官方下载地址： https://nodejs.org/en/download/ 验证安装： node -v# 输出示例：# v22.16.0 安装 Hexo Hexo 通过 npm 包管理器安装。建议先切换至国内镜像源加速下载（可选）： npm config set registry https://registry.npmmirror.com 参考教程：npm 换源教程 安装 Hexo CLI： npm install hexo-cli -g 验证安装： hexo -v# 输出示例 (版本号可能不同)：# hexo-cli: 4.3.2# os: win32 10.0.26100# node: 22.16.0# ...其他依赖信息... 安装 Hexo Git 部署插件 此插件用于将博客部署到 GitHub： npm install hexo-deployer-git --save 配置 GitHub 配置 GitHub SSH 密钥 a. 生成 SSH Key： ssh-keygen -t rsa -C your_email@example.com # 替换为你的 GitHub 注册邮箱# 连续按三次回车键接受所有默认设置 b. 添加 SSH Key 到 GitHub： 登录 GitHub，点击右上角头像 - Settings。 在左侧边栏选择 SSH and GPG keys。 点击 New SSH key 按钮。 在 Title 字段输入一个易于识别的名称（如 My PC Key）。 打开本地生成的 id_rsa.pub 文件（通常在 ~/.ssh/ 目录下），复制其全部内容。 将内容粘贴到 Key 文本框中。 点击 Add SSH key。 c. 测试 SSH 连接： ssh -T git@github.com# 首次连接会询问是否继续，输入 `yes`# 成功提示示例：# Hi huanyuehjj! Youve successfully authenticated, but GitHub does not provide shell access. d. 配置 Git 全局用户信息： git config --global user.name huanyuehjj # 替换为你的 GitHub 用户名git config --global user.email hjj_huanyue@outlook.com # 替换为你的 GitHub 注册邮箱 创建与配置本地博客 初始化 Hexo 博客 创建一个空文件夹作为你的博客根目录，进入该目录。 初始化项目： hexo init 安装项目依赖： npm install 关键目录结构说明： .├── _config.yml # 站点主配置文件├── package.json # 项目依赖信息├── package-lock.json # 依赖锁定文件├── scaffolds/ # 文章模板文件夹├── source/ # 存放博客文章 (Markdown) 和页面├── themes/ # 存放博客主题└── node_modules/ # 项目依赖包 (由 npm install 生成) 生成静态文件并启动本地预览服务器： hexo generate # 或简写 hexo ghexo server # 或简写 hexo s 成功启动后，命令行会显示： INFO Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop. 打开浏览器访问 http://localhost:4000 即可查看本地博客。 注意： 此服务仅在本地运行，需部署到 GitHub Pages 才能对外访问。 更换主题 (以 Stellar Next 为例) 方式一：手动下载 (如 Stellar) 访问主题的 GitHub 仓库 (如：https://github.com/xaoxuu/hexo-theme-stellar)。 下载 ZIP 压缩包。 解压到博客根目录下的 themes/ 文件夹中，确保主题文件夹名为 stellar。 方式二：Git 克隆 (如 Next) # 在博客根目录执行：git clone https://github.com/theme-next/hexo-theme-next.git themes/next 启用主题： 修改博客根目录下的 _config.yml 文件，找到 theme 字段： # Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: stellar # 或 next，与你在 themes/ 下的文件夹名一致 应用主题配置： 不同主题通常有独立的配置文件（如 themes/stellar/_config.yml），请查阅主题文档进行详细配置。 提示： Hexo 官网的 主题页面 提供了丰富的主题选择。 部署到 GitHub Pages 创建 GitHub Pages 仓库 在 GitHub 上创建一个新的仓库。 仓库名必须严格遵守格式： 你的GitHub用户名.github.io (例如：huanyuehjj.github.io)。这个仓库名将直接作为你博客的访问地址。 配置 Hexo 部署信息 编辑博客根目录下的 _config.yml 文件： 设置博客 URL (通常在文件开头附近)： # Sitetitle: Your Blog Titlesubtitle: description: keywords:author: Your Namelanguage: zh-CNtimezone: url: https://huanyuehjj.github.io # 替换为你的 GitHub Pages 地址 配置部署选项 (在文件末尾附近)： # Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: git@github.com:huanyuehjj/huanyuehjj.github.io.git # 替换为你的仓库 SSH 地址 branch: main # 或 master，根据你的仓库默认分支名 部署博客 确保已安装 hexo-deployer-git 插件 (见步骤 4)。 执行部署命令： hexo clean # 清除缓存和旧文件 (可选但推荐)hexo generate # 重新生成静态文件hexo deploy # 或简写 hexo d，部署到 GitHub 首次部署可能需要输入 GitHub 账户密码或授权。 部署完成后，稍等几分钟（GitHub Pages 需要构建），在浏览器访问 https://你的GitHub用户名.github.io (例如：https://huanyuehjj.github.io) 即可看到你的在线博客。 恭喜！至此，你的个人博客已成功部署到 GitHub Pages！接下来，你可以专注于编写博客内容，并深入探索 Hexo 的配置选项（如站点信息、主题样式、插件等）来个性化你的博客。","tags":["Hexo","Stellar","博客搭建"],"categories":["技术文档","Hexo教程"]}]